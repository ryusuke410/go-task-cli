version: '3'

tasks:
  build:
    desc: build
    deps:
      - clean
    cmds:
      - npm exec -- tsup ./src/install.ts --out-dir ./build --config ./tsconfig.json --no-external --external @ryusuke410/go-task-cli
  clean:
    desc: clean
    cmds:
      - rm -rf ./build
  build-and-pack:
    desc: build and pack
    deps:
      - build
    cmds:
      - mkdir -p {{.goTaskCli_releasesDir}}
      - npm pack --pack-destination {{.goTaskCli_releasesDir}}
  run-tests:
    desc: run tests
    deps:
      - build-and-pack
      - init-tests-work-space
    cmds:
      - cp -r ./tests/goTaskCli_test {{.goTaskCli_testsWorkSpace}}/
      - task: run-tests-body

  run-tests-body:
    internal: true
    silent: true
    dir: '{{.goTaskCli_testsWorkSpace}}/goTaskCli_test'
    cmds:
      - npm install
      - npm install --save-dev "{{.goTaskCli_packageTarGz}}"
  init-tests-work-space:
    internal: true
    silent: true
    cmds:
      - rm -rf {{.goTaskCli_testsWorkSpace}}
      - mkdir -p {{.goTaskCli_testsWorkSpace}}

# NOTE: vars cannot be defined locally
vars:
  goTaskCli_releasesDir: './releases'
  goTaskCli_testsWorkSpace: './tests-work-space'
  goTaskCli_packageJsonText:
    sh: cat ./package.json
  goTaskCli_packageVersion: '{{(mustFromJson .goTaskCli_packageJsonText).version}}'
  goTaskCli_packageTarGz: '{{.TASKFILE_DIR}}/{{.goTaskCli_releasesDir}}/ryusuke410-go-task-cli-{{.goTaskCli_packageVersion}}.tgz'
